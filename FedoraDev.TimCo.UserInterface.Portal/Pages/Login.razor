@inject IAuthenticationService _authenticationService;
@inject NavigationManager _navigationManager;

<EditForm Model="_authenticationUser" OnValidSubmit="ExecuteLogin" class="">
	<div class="form-row">
		<div class="col-auto">
			<label for="email" class="sr-only">Email</label>
			<InputText id="email" class="form-control" @bind-Value="_authenticationUser.EmailAddress" placeholder="Email Address" />
		</div>

		<div class="col-auto">
			<label for="password" class="sr-only">Password</label>
			<InputText id="password" type="password" class="form-control" @bind-Value="_authenticationUser.Password" placeholder="Password" />
		</div>

		<div class="col-auto">
			<button type="submit" class="btn btn-success">Login</button>
		</div>
	</div>
</EditForm>

@code {
	private AuthenticationUserModel _authenticationUser = new();
	private bool _showAuthenticationError = false;
	private string _authenticationError = string.Empty;

	private async Task ExecuteLogin()
	{
		_showAuthenticationError = false;
		AuthenticatedUserModel result = await _authenticationService.Login(_authenticationUser);

		if (result != null)
		{
			_navigationManager.NavigateTo("/");
			return;
		}

		_authenticationError = "An error occured while attempting to login.";
		_showAuthenticationError = true;
	}
}
